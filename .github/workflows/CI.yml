name: CI

on:
  push:
  pull_request:

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: messense/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: --release --sdist -o dist --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist
  
    # - name: Install Python3.9
    #   uses: actions/setup-python@v1 
    #   env:
    #       TEST_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #       TEST_SECRET: ${{ secrets.PYPI_API_TOKEN }}
    #   with:
    #     python-version: 3.9
    # - name: Install Maturin
    #   run: |
    #     pip install maturin
    # - name: Upload Artifacts
    #   run: |
    #     echo "[*] Test Output."
    #     echo ${TEST_GITHUB_TOKEN}
    #     echo ${TEST_SECRET}
    #     echo "[*] Trying to Upload these files."
    #     find . -name '*.whl' && find . -name '*.tar.gz'
    #     echo "[*] Using Secret."
    #     echo ${{ secrets.PYPI_API_TOKEN }}
    #     echo "[*] Starting upload."
    #     maturin upload --username="__token__" --password=${{ secrets.PYPI_API_TOKEN }} --skip-existing $(find . -name '*.whl' && find . -name '*.tar.gz') 

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release -o dist --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release -o dist --universal2 --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: dist
      - name: Publish packages to PYPI.
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
